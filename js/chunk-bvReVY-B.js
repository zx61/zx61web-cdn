function O(u,D){if(u.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),r=0;r<e.length;r++)e[r]=255;for(var n=0;n<u.length;n++){var s=u.charAt(n),c=s.charCodeAt(0);if(e[c]!==255)throw new TypeError(s+" is ambiguous");e[c]=n}var o=u.length,C=u.charAt(0),x=Math.log(o)/Math.log(256),f=Math.log(256)/Math.log(o);function m(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length===0)return"";for(var i=0,F=0,d=0,l=t.length;d!==l&&t[d]===0;)d++,i++;for(var p=(l-d)*f+1>>>0,b=new Uint8Array(p);d!==l;){for(var h=t[d],A=0,E=p-1;(h!==0||A<F)&&E!==-1;E--,A++)h+=256*b[E]>>>0,b[E]=h%o>>>0,h=h/o>>>0;if(h!==0)throw new Error("Non-zero carry");F=A,d++}for(var y=p-F;y!==p&&b[y]===0;)y++;for(var g=C.repeat(i);y<p;++y)g+=u.charAt(b[y]);return g}function _(t){if(typeof t!="string")throw new TypeError("Expected String");if(t.length===0)return new Uint8Array;var i=0;if(t[i]!==" "){for(var F=0,d=0;t[i]===C;)F++,i++;for(var l=(t.length-i)*x+1>>>0,p=new Uint8Array(l);t[i];){var b=e[t.charCodeAt(i)];if(b===255)return;for(var h=0,A=l-1;(b!==0||h<d)&&A!==-1;A--,h++)b+=o*p[A]>>>0,p[A]=b%256>>>0,b=b/256>>>0;if(b!==0)throw new Error("Non-zero carry");d=h,i++}if(t[i]!==" "){for(var E=l-d;E!==l&&p[E]===0;)E++;for(var y=new Uint8Array(F+(l-E)),g=F;E!==l;)y[g++]=p[E++];return y}}}function j(t){var i=_(t);if(i)return i;throw new Error(`Non-${D} character`)}return{encode:m,decodeUnsafe:_,decode:j}}var U=O,P=U;const z=u=>{if(u instanceof Uint8Array&&u.constructor.name==="Uint8Array")return u;if(u instanceof ArrayBuffer)return new Uint8Array(u);if(ArrayBuffer.isView(u))return new Uint8Array(u.buffer,u.byteOffset,u.byteLength);throw new Error("Unknown type, must be binary type")},T=u=>new TextEncoder().encode(u),M=u=>new TextDecoder().decode(u);class k{constructor(D,e,r){this.name=D,this.prefix=e,this.baseEncode=r}encode(D){if(D instanceof Uint8Array)return`${this.prefix}${this.baseEncode(D)}`;throw Error("Unknown type, must be binary type")}}class ${constructor(D,e,r){if(this.name=D,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(D){if(typeof D=="string"){if(D.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(D)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(D.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(D){return B(this,D)}}class N{constructor(D){this.decoders=D}or(D){return B(this,D)}decode(D){const e=D[0],r=this.decoders[e];if(r)return r.decode(D);throw RangeError(`Unable to decode multibase string ${JSON.stringify(D)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const B=(u,D)=>new N({...u.decoders||{[u.prefix]:u},...D.decoders||{[D.prefix]:D}});class R{constructor(D,e,r,n){this.name=D,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new k(D,e,r),this.decoder=new $(D,e,n)}encode(D){return this.encoder.encode(D)}decode(D){return this.decoder.decode(D)}}const v=({name:u,prefix:D,encode:e,decode:r})=>new R(u,D,e,r),w=({prefix:u,name:D,alphabet:e})=>{const{encode:r,decode:n}=P(e,D);return v({prefix:u,name:D,encode:r,decode:s=>z(n(s))})},q=(u,D,e,r)=>{const n={};for(let f=0;f<D.length;++f)n[D[f]]=f;let s=u.length;for(;u[s-1]==="=";)--s;const c=new Uint8Array(s*e/8|0);let o=0,C=0,x=0;for(let f=0;f<s;++f){const m=n[u[f]];if(m===void 0)throw new SyntaxError(`Non-${r} character`);C=C<<e|m,o+=e,o>=8&&(o-=8,c[x++]=255&C>>o)}if(o>=e||255&C<<8-o)throw new SyntaxError("Unexpected end of data");return c},V=(u,D,e)=>{const r=D[D.length-1]==="=",n=(1<<e)-1;let s="",c=0,o=0;for(let C=0;C<u.length;++C)for(o=o<<8|u[C],c+=8;c>e;)c-=e,s+=D[n&o>>c];if(c&&(s+=D[n&o<<e-c]),r)for(;s.length*e&7;)s+="=";return s},a=({name:u,prefix:D,bitsPerChar:e,alphabet:r})=>v({prefix:D,name:u,encode(n){return V(n,r,e)},decode(n){return q(n,r,e,u)}}),J=v({prefix:"\0",name:"identity",encode:u=>M(u),decode:u=>T(u)}),K=Object.freeze(Object.defineProperty({__proto__:null,identity:J},Symbol.toStringTag,{value:"Module"})),G=a({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),Q=Object.freeze(Object.defineProperty({__proto__:null,base2:G},Symbol.toStringTag,{value:"Module"})),X=a({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),I=Object.freeze(Object.defineProperty({__proto__:null,base8:X},Symbol.toStringTag,{value:"Module"})),Z=w({prefix:"9",name:"base10",alphabet:"0123456789"}),L=Object.freeze(Object.defineProperty({__proto__:null,base10:Z},Symbol.toStringTag,{value:"Module"})),W=a({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Y=a({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),H=Object.freeze(Object.defineProperty({__proto__:null,base16:W,base16upper:Y},Symbol.toStringTag,{value:"Module"})),DD=a({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),uD=a({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),eD=a({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rD=a({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),tD=a({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),nD=a({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),oD=a({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),aD=a({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),sD=a({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),iD=Object.freeze(Object.defineProperty({__proto__:null,base32:DD,base32hex:tD,base32hexpad:oD,base32hexpadupper:aD,base32hexupper:nD,base32pad:eD,base32padupper:rD,base32upper:uD,base32z:sD},Symbol.toStringTag,{value:"Module"})),cD=w({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),bD=w({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),CD=Object.freeze(Object.defineProperty({__proto__:null,base36:cD,base36upper:bD},Symbol.toStringTag,{value:"Module"})),dD=w({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),ED=w({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),fD=Object.freeze(Object.defineProperty({__proto__:null,base58btc:dD,base58flickr:ED},Symbol.toStringTag,{value:"Module"})),lD=a({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),pD=a({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),hD=a({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),yD=a({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),AD=Object.freeze(Object.defineProperty({__proto__:null,base64:lD,base64pad:pD,base64url:hD,base64urlpad:yD},Symbol.toStringTag,{value:"Module"})),S=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),FD=S.reduce((u,D,e)=>(u[e]=D,u),[]),wD=S.reduce((u,D,e)=>(u[D.codePointAt(0)]=e,u),[]);function mD(u){return u.reduce((D,e)=>(D+=FD[e],D),"")}function gD(u){const D=[];for(const e of u){const r=wD[e.codePointAt(0)];if(r===void 0)throw new Error(`Non-base256emoji character: ${e}`);D.push(r)}return new Uint8Array(D)}const vD=v({prefix:"🚀",name:"base256emoji",encode:mD,decode:gD}),xD=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:vD},Symbol.toStringTag,{value:"Module"}));new TextEncoder;new TextDecoder;const _D={...K,...Q,...I,...L,...H,...iD,...CD,...fD,...AD,...xD};function BD(u){throw new Error('Could not dynamically require "'+u+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}export{_D as b,BD as c};
